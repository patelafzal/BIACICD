name: Frontend CI/CD (Docker)

on:
  push:
    branches: [ main ]
    paths:
      - "frontend/**"

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 1. Build the *base* image (no tests yet)
      - name: Build image for test run
        run: |
          docker build \
            --file frontend/Dockerfile \
            --target base \          # ⚠️ build only up to “base”, not “test”
            --tag frontend-test:${{ github.sha }} \
            frontend

      # 2. Spin up the image and run Jest once in CI mode
      - name: Run unit tests
        run: |
          docker run --rm \
            -e CI=true \             # ensures Jest exits instead of watching
            frontend-test:${{ github.sha }} \
            npm test -- \
              --env=jsdom \
              --runInBand \
              --detectOpenHandles \
              --forceExit

  docker_build_and_deploy:
    name: Build, Push & Deploy Frontend
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build production image
        run: |
          docker build \
            --file frontend/Dockerfile \
            --target prod \
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/sample-frontend:latest \
            frontend

      - name: Push production image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/sample-frontend:latest

      - name: Trigger Render deployment
        run: |
          curl -X POST "${{ secrets.FRONTEND_RENDER_DEPLOY_HOOK_URL }}"
